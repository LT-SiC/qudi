#  Example Qudi configuration file.
#
#
#
# IMPORTANT: The format of every 'module.Class' line has changed on 28.6.2015.
# =========  The class name now needs to be explicitly given here in the config.
#		  the config line must the form package.module.Class.ClassName
global:
    # list of modules to load when starting
    startup: ['man', 'tray', 'tasklogic']

    module_server:
        address: 'localhost'
        port: 12345

    ## For controlling the appearance of the GUI:
    stylesheet: 'qdark.qss'

hardware:
    timetagger:
        module.Class: 'swabian_instruments.timetagger_dummy.TT_dummy'

    microwave_1:
        module.Class: 'microwave.mw_source_dummy.MicrowaveDummy'
    #pulsestreamer:
    #    module.Class: 'swabian_instruments.pulse_streamer.PulseStreamer_dummy'
        #pulsestreamer_ip: '129.69.46.51' #master
    #    pulsestreamer_ip: '129.69.46.36' #slave
    #    pulsed_file_dir: 'C:\\Software\\pulsed_files'
    #    laser_channel: 0
    #    uw_x_channel: 2
    #    use_external_clock: False
    #    external_clock_option: 0

    mcas_dict_awg:
        module.Class: 'Keysight_AWG_M8190.pym8190a.mcas_dict_holder'
        name: 'awg_holder'

    odmrcounterdummy:
        module.Class: 'odmr_counter_dummy.ODMRCounterDummy'
        clock_frequency: 100 # in Hz
        number_of_channels: 2
        connect:
            fitlogic: 'fitlogic' #

logic:



    gatedcounterlogic:
        module.Class: 'gated_counter_logic.GatedCounter'
        connect:
            mcas_holder: 'mcas_dict_awg'
            fastcounter: 'timetagger'

    queuelogic: #free declaration
        module.Class: 'queue.queue_logic.queue_logic' #a class path.
        connect:
            gated_counter: 'gatedcounterlogic' # key as in declaration , value as in the config key
            mcas_holder: 'mcas_dict_awg'
            #confocal: 'scannerlogic'
            #mcas_dict: 'mcas_dict_awg'
            transition_tracker : 'transitiontrackerlogic' #Label(name)  Should be same as in declaration of the class

    transitiontrackerlogic:
        module.Class: 'transition_tracker.TransitionTracker'
        connect:
            mcas_holder: 'mcas_dict_awg'
    
    odmrlogic:
        module.Class: 'odmrlogic.odmr_logic.ODMRLogic_holder'
        connect:
            counter_device: 'timetagger'
            savelogic: 'savelogic'
            mcas_holder: 'mcas_dict_awg'

    rabilogic:
        module.Class: 'rabi_logic.rabi_logic.RabiLogic'
        connect:
            savelogic: 'savelogic'

        
    counterlogic:
        module.Class: 'counter_logic.CounterLogic'
        connect:
            savelogic: 'savelogic'
    
    scannerlogic:
        module.Class: 'confocal_logic.ConfocalLogic'
        connect:
            savelogic: 'savelogic'

    scanner_tilt_interfuse:
        module.Class: 'interfuse.scanner_tilt_interfuse.ScannerTiltInterfuse'


    tasklogic:
        module.Class: 'taskrunner.TaskRunner'
        tasks:
            scannerLocationRefocus:
                module: 'refocus'
                pausetasks: ['scan', 'odmr']


    kernellogic:
        module.Class: 'jupyterkernel.kernellogic.QudiKernelLogic'
        remoteaccess: True

gui:
    tray:
        module.Class: 'trayicon.TrayIcon'
    man:
        module.Class: 'manager.managergui.ManagerGui'
    queuegui:
        module.Class: 'queue.Queue.queue_gui'
        connect:
            queue_logic: 'queuelogic'
