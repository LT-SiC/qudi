# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/Users/vladislavbushmakin/Desktop/qudi/gui/confocal/ui_cf_settings.ui'
#
# Created by: PyQt5 UI code generator 5.9.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_SettingsDialog(object):
    def setupUi(self, SettingsDialog):
        SettingsDialog.setObjectName("SettingsDialog")
        SettingsDialog.resize(310, 425)
        self.verticalLayout = QtWidgets.QVBoxLayout(SettingsDialog)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(SettingsDialog)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.clock_frequency_InputWidget = QtWidgets.QSpinBox(SettingsDialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.clock_frequency_InputWidget.sizePolicy().hasHeightForWidth())
        self.clock_frequency_InputWidget.setSizePolicy(sizePolicy)
        self.clock_frequency_InputWidget.setMaximumSize(QtCore.QSize(50, 16777215))
        self.clock_frequency_InputWidget.setMouseTracking(True)
        self.clock_frequency_InputWidget.setAcceptDrops(True)
        self.clock_frequency_InputWidget.setWrapping(False)
        self.clock_frequency_InputWidget.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.clock_frequency_InputWidget.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.clock_frequency_InputWidget.setAccelerated(True)
        self.clock_frequency_InputWidget.setMaximum(1000000)
        self.clock_frequency_InputWidget.setProperty("value", 1000)
        self.clock_frequency_InputWidget.setObjectName("clock_frequency_InputWidget")
        self.horizontalLayout.addWidget(self.clock_frequency_InputWidget)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_2 = QtWidgets.QLabel(SettingsDialog)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_2.addWidget(self.label_2)
        self.return_slowness_InputWidget = QtWidgets.QSpinBox(SettingsDialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.return_slowness_InputWidget.sizePolicy().hasHeightForWidth())
        self.return_slowness_InputWidget.setSizePolicy(sizePolicy)
        self.return_slowness_InputWidget.setMaximumSize(QtCore.QSize(50, 16777215))
        self.return_slowness_InputWidget.setMouseTracking(True)
        self.return_slowness_InputWidget.setAcceptDrops(True)
        self.return_slowness_InputWidget.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.return_slowness_InputWidget.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.return_slowness_InputWidget.setAccelerated(True)
        self.return_slowness_InputWidget.setMaximum(1000)
        self.return_slowness_InputWidget.setProperty("value", 50)
        self.return_slowness_InputWidget.setObjectName("return_slowness_InputWidget")
        self.horizontalLayout_2.addWidget(self.return_slowness_InputWidget)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.line = QtWidgets.QFrame(SettingsDialog)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout.addWidget(self.line)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label_3 = QtWidgets.QLabel(SettingsDialog)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_3.addWidget(self.label_3)
        self.loop_scan_CheckBox = QtWidgets.QCheckBox(SettingsDialog)
        self.loop_scan_CheckBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.loop_scan_CheckBox.sizePolicy().hasHeightForWidth())
        self.loop_scan_CheckBox.setSizePolicy(sizePolicy)
        self.loop_scan_CheckBox.setMaximumSize(QtCore.QSize(50, 16777215))
        self.loop_scan_CheckBox.setAccessibleDescription("")
        self.loop_scan_CheckBox.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.loop_scan_CheckBox.setAutoFillBackground(False)
        self.loop_scan_CheckBox.setText("")
        self.loop_scan_CheckBox.setChecked(False)
        self.loop_scan_CheckBox.setObjectName("loop_scan_CheckBox")
        self.horizontalLayout_3.addWidget(self.loop_scan_CheckBox)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.label_8 = QtWidgets.QLabel(SettingsDialog)
        self.label_8.setObjectName("label_8")
        self.horizontalLayout_9.addWidget(self.label_8)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_9.addItem(spacerItem)
        self.depth_dir_x_radioButton = QtWidgets.QRadioButton(SettingsDialog)
        self.depth_dir_x_radioButton.setChecked(True)
        self.depth_dir_x_radioButton.setObjectName("depth_dir_x_radioButton")
        self.horizontalLayout_9.addWidget(self.depth_dir_x_radioButton)
        self.depth_dir_y_radioButton = QtWidgets.QRadioButton(SettingsDialog)
        self.depth_dir_y_radioButton.setChecked(False)
        self.depth_dir_y_radioButton.setObjectName("depth_dir_y_radioButton")
        self.horizontalLayout_9.addWidget(self.depth_dir_y_radioButton)
        self.verticalLayout.addLayout(self.horizontalLayout_9)
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.label_7 = QtWidgets.QLabel(SettingsDialog)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.horizontalLayout_10.addWidget(self.label_7)
        self.fixed_aspect_xy_checkBox = QtWidgets.QCheckBox(SettingsDialog)
        self.fixed_aspect_xy_checkBox.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fixed_aspect_xy_checkBox.sizePolicy().hasHeightForWidth())
        self.fixed_aspect_xy_checkBox.setSizePolicy(sizePolicy)
        self.fixed_aspect_xy_checkBox.setMaximumSize(QtCore.QSize(50, 16777215))
        self.fixed_aspect_xy_checkBox.setAccessibleDescription("")
        self.fixed_aspect_xy_checkBox.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.fixed_aspect_xy_checkBox.setAutoFillBackground(False)
        self.fixed_aspect_xy_checkBox.setText("")
        self.fixed_aspect_xy_checkBox.setChecked(True)
        self.fixed_aspect_xy_checkBox.setObjectName("fixed_aspect_xy_checkBox")
        self.horizontalLayout_10.addWidget(self.fixed_aspect_xy_checkBox)
        self.verticalLayout.addLayout(self.horizontalLayout_10)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.label_4 = QtWidgets.QLabel(SettingsDialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_4.sizePolicy().hasHeightForWidth())
        self.label_4.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_4.addWidget(self.label_4)
        self.fixed_aspect_depth_checkBox = QtWidgets.QCheckBox(SettingsDialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fixed_aspect_depth_checkBox.sizePolicy().hasHeightForWidth())
        self.fixed_aspect_depth_checkBox.setSizePolicy(sizePolicy)
        self.fixed_aspect_depth_checkBox.setMaximumSize(QtCore.QSize(50, 16777215))
        self.fixed_aspect_depth_checkBox.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.fixed_aspect_depth_checkBox.setText("")
        self.fixed_aspect_depth_checkBox.setChecked(True)
        self.fixed_aspect_depth_checkBox.setObjectName("fixed_aspect_depth_checkBox")
        self.horizontalLayout_4.addWidget(self.fixed_aspect_depth_checkBox)
        self.verticalLayout.addLayout(self.horizontalLayout_4)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.adjust_label = QtWidgets.QLabel(SettingsDialog)
        self.adjust_label.setObjectName("adjust_label")
        self.horizontalLayout_7.addWidget(self.adjust_label)
        self.adjust_cursor_to_optimizer_checkBox = QtWidgets.QCheckBox(SettingsDialog)
        self.adjust_cursor_to_optimizer_checkBox.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.adjust_cursor_to_optimizer_checkBox.setText("")
        self.adjust_cursor_to_optimizer_checkBox.setChecked(True)
        self.adjust_cursor_to_optimizer_checkBox.setObjectName("adjust_cursor_to_optimizer_checkBox")
        self.horizontalLayout_7.addWidget(self.adjust_cursor_to_optimizer_checkBox)
        self.verticalLayout.addLayout(self.horizontalLayout_7)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.label_5 = QtWidgets.QLabel(SettingsDialog)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.horizontalLayout_5.addWidget(self.label_5)
        self.slider_small_step_DoubleSpinBox = ScienDSpinBox(SettingsDialog)
        self.slider_small_step_DoubleSpinBox.setObjectName("slider_small_step_DoubleSpinBox")
        self.horizontalLayout_5.addWidget(self.slider_small_step_DoubleSpinBox)
        self.verticalLayout.addLayout(self.horizontalLayout_5)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.label_6 = QtWidgets.QLabel(SettingsDialog)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.horizontalLayout_6.addWidget(self.label_6)
        self.slider_big_step_DoubleSpinBox = ScienDSpinBox(SettingsDialog)
        self.slider_big_step_DoubleSpinBox.setObjectName("slider_big_step_DoubleSpinBox")
        self.horizontalLayout_6.addWidget(self.slider_big_step_DoubleSpinBox)
        self.verticalLayout.addLayout(self.horizontalLayout_6)
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.label_10 = QtWidgets.QLabel(SettingsDialog)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_10.setFont(font)
        self.label_10.setObjectName("label_10")
        self.horizontalLayout_8.addWidget(self.label_10)
        self.save_purePNG_checkBox = QtWidgets.QCheckBox(SettingsDialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.save_purePNG_checkBox.sizePolicy().hasHeightForWidth())
        self.save_purePNG_checkBox.setSizePolicy(sizePolicy)
        self.save_purePNG_checkBox.setMaximumSize(QtCore.QSize(50, 16777215))
        self.save_purePNG_checkBox.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.save_purePNG_checkBox.setText("")
        self.save_purePNG_checkBox.setChecked(True)
        self.save_purePNG_checkBox.setObjectName("save_purePNG_checkBox")
        self.horizontalLayout_8.addWidget(self.save_purePNG_checkBox)
        self.verticalLayout.addLayout(self.horizontalLayout_8)
        self.hardware_switch = QtWidgets.QPushButton(SettingsDialog)
        self.hardware_switch.setObjectName("hardware_switch")
        self.verticalLayout.addWidget(self.hardware_switch)
        self.buttonBox = QtWidgets.QDialogButtonBox(SettingsDialog)
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Apply|QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.verticalLayout.addWidget(self.buttonBox)

        self.retranslateUi(SettingsDialog)
        self.buttonBox.accepted.connect(SettingsDialog.accept)
        self.buttonBox.rejected.connect(SettingsDialog.reject)
        QtCore.QMetaObject.connectSlotsByName(SettingsDialog)
        SettingsDialog.setTabOrder(self.clock_frequency_InputWidget, self.return_slowness_InputWidget)
        SettingsDialog.setTabOrder(self.return_slowness_InputWidget, self.loop_scan_CheckBox)
        SettingsDialog.setTabOrder(self.loop_scan_CheckBox, self.fixed_aspect_depth_checkBox)
        SettingsDialog.setTabOrder(self.fixed_aspect_depth_checkBox, self.save_purePNG_checkBox)
        SettingsDialog.setTabOrder(self.save_purePNG_checkBox, self.hardware_switch)
        SettingsDialog.setTabOrder(self.hardware_switch, self.buttonBox)

    def retranslateUi(self, SettingsDialog):
        _translate = QtCore.QCoreApplication.translate
        SettingsDialog.setWindowTitle(_translate("SettingsDialog", "qudi: Confocal - Settings"))
        self.label.setToolTip(_translate("SettingsDialog", "<html><head/><body><p>That is the inverse time how long the scanner stays at the desired position during the scan and counts.</p></body></html>"))
        self.label.setText(_translate("SettingsDialog", "Clock frequency (Hz)"))
        self.clock_frequency_InputWidget.setToolTip(_translate("SettingsDialog", "<html><head/><body><p>That is the inverse time how long the scanner stays at the desired position during the scan and counts.</p></body></html>"))
        self.label_2.setToolTip(_translate("SettingsDialog", "<html><head/><body><p>That is basically the \'scan\' resolution when the scanner moves backwards to prepare to scan again a line.</p><p>How many points are scanned in one line is depending on the resolution. Since the scanner is permanently counting during the scan, only the clock frequency determined the speed, how fast a line is scanned by a given resolution. If the scanner has to move back, it uses the same scan line method but just in the reverse. How many points are approached in the backwards movement depends on the \'return slowness\'. If you scan with 100 point resolution and set return slowness to 25, than the return movement will be 4 times faster.</p><p>BE CAREFULL NOT TO USE A SMALL NUMBER, SINCE THE SCANNER MIGHT CRASH AGAINST THE BOARDER BECAUSE IT IS MOVING BACK TOO FAST!</p></body></html>"))
        self.label_2.setText(_translate("SettingsDialog", "Return slowness (points)"))
        self.return_slowness_InputWidget.setToolTip(_translate("SettingsDialog", "<html><head/><body><p>That is basically the \'scan\' resolution when the scanner moves backwards to prepare to scan again a line.</p></body></html>"))
        self.label_3.setToolTip(_translate("SettingsDialog", "<html><head/><body><p>The aspect ratio will be fixed to 1:1 if checked. If not the scan will be stretched to the available area in the XY scan. </p></body></html>"))
        self.label_3.setText(_translate("SettingsDialog", "Do loop scans"))
        self.loop_scan_CheckBox.setToolTip(_translate("SettingsDialog", "Scan continuously (automatically restart at the end of a scan).  This is useful for photo-bleaching a sample."))
        self.label_8.setText(_translate("SettingsDialog", "Depth scan direction"))
        self.depth_dir_x_radioButton.setText(_translate("SettingsDialog", "XZ"))
        self.depth_dir_y_radioButton.setText(_translate("SettingsDialog", "YZ"))
        self.label_7.setToolTip(_translate("SettingsDialog", "<html><head/><body><p>The aspect ratio will be fixed to 1:1 if checked. If not the scan will be stretched to the available area in the XY scan. </p></body></html>"))
        self.label_7.setText(_translate("SettingsDialog", "Fixed Aspect Ratio XY Scan"))
        self.fixed_aspect_xy_checkBox.setToolTip(_translate("SettingsDialog", "<html><head/><body><p><span style=\" font-size:10pt;\">The aspect ratio will be fixed to 1:1 if checked. If not the scan will be stretched to the available area in the XY scan. </span></p></body></html>"))
        self.label_4.setToolTip(_translate("SettingsDialog", "<html><head/><body><p>The aspect ratio will be fixed to 1:1 if checked. If not the scan will be stretched to the available area in the Z scan. </p></body></html>"))
        self.label_4.setText(_translate("SettingsDialog", "Fixed Aspect Ratio Depth Scan"))
        self.fixed_aspect_depth_checkBox.setToolTip(_translate("SettingsDialog", "<html><head/><body><p><span style=\" font-size:10pt;\">The aspect ratio will be fixed to 1:1 if checked. If not the scan will be stretched to the available area in the Z scan. </span></p></body></html>"))
        self.adjust_label.setText(_translate("SettingsDialog", "Adjust cursor size to optimizer range"))
        self.label_5.setToolTip(_translate("SettingsDialog", "<html><head/><body><p>Change the stepsize of a slider if you are using the keyboard to move the slider position. Here you can adjust the small steps for the crosshair move.<br/>The keyboard configuration is the following:<br/>ArrowLeft = Move -x<br/>ArrowRight = Move +x<br/>ArrowUp = Move +y<br/>ArrowDown = Move -y<br/>PageUp = Move +z<br/>PageDown = Move -z</p></body></html>"))
        self.label_5.setText(_translate("SettingsDialog", "Slider small step with Keys:"))
        self.slider_small_step_DoubleSpinBox.setToolTip(_translate("SettingsDialog", "<html><head/><body><p><span style=\" font-size:10pt;\">Change the stepsize of a slider if you are using the keyboard to move the slider position. Here you can adjust the small steps for the crosshair move.</span></p></body></html>"))
        self.slider_small_step_DoubleSpinBox.setSuffix(_translate("SettingsDialog", "m"))
        self.label_6.setToolTip(_translate("SettingsDialog", "<html><head/><body><p>Change the stepsize of a slider if you are using the keyboard to move the slider position. Here you can adjust the big steps for the crosshair move.<br/>The keyboard configuration is the following:<br/>Ctrl + ArrowLeft = Move -x<br/>Ctrl + ArrowRight = Move +x<br/>Ctrl + ArrowUp = Move +y<br/>Ctrl + ArrowDown = Move -y<br/>Ctrl + PageUp = Move +z<br/>Ctrl + PageDown = Move -z</p></body></html>"))
        self.label_6.setText(_translate("SettingsDialog", "Slider big step with Keys:"))
        self.slider_big_step_DoubleSpinBox.setToolTip(_translate("SettingsDialog", "<html><head/><body><p><span style=\" font-size:10pt;\">Change the stepsize of a slider if you are using the keyboard to move the slider position. Here you can adjust the big steps for the crosshair move.</span></p></body></html>"))
        self.slider_big_step_DoubleSpinBox.setSuffix(_translate("SettingsDialog", "m"))
        self.label_10.setToolTip(_translate("SettingsDialog", "<html><head/><body><p>If you use the image_save method in the menu bar of confocal, together with the svg file also a pure image file (without axis and everything, just the datapoints) are saved in a png image.</p></body></html>"))
        self.label_10.setText(_translate("SettingsDialog", "Also save data as raw pixel image (png)"))
        self.save_purePNG_checkBox.setToolTip(_translate("SettingsDialog", "<html><head/><body><p><span style=\" font-size:10pt;\">If you use the image_save method in the menu bar of confocal, together with the svg file also a pure image file (without axis and everything, just the datapoints) are saved in a png image.</span></p></body></html>"))
        self.hardware_switch.setToolTip(_translate("SettingsDialog", "<html><head/><body><p><span style=\" font-size:10pt;\">This kills everything working on the nidaq. So I made this also more resilient to errors and made it come out of its locked state.</span></p><p><span style=\" font-size:10pt;\">Even if if throws numerous errors when trying, you can use everything normally after the hardware reset (just restart the counter twice).</span></p><p><span style=\" font-size:10pt;\">This also means that you should not touch qudi while running diqo since this will try to put the hardware focus back on qudi and will throw even more errors.</span></p></body></html>"))
        self.hardware_switch.setText(_translate("SettingsDialog", "Switch off Hardware"))

from qtwidgets.scientific_spinbox import ScienDSpinBox
